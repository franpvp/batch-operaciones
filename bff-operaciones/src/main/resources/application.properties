spring.application.name=bff-operaciones
server.port=8081

# Broker externo (docker con advertised EXTERNAL://localhost:29092)
spring.kafka.bootstrap-servers=localhost:29092

# Tópico DLT que consume el @KafkaListener
app.kafka.dlt-topic=operaciones-trade-topic.DLT

# Consumer
spring.kafka.consumer.group-id=bff-operaciones-dlt-grp
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest

# Deserializadores
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# JsonDeserializer ? mapea JSON ? TradeDto (paquete de este BFF)
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.bff_operaciones.dto.TradeDto

# Tuning de consumo (alineado a tu otro consumer)
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.max.poll.records=100
spring.kafka.consumer.properties.fetch.max.wait.ms=500

# Listener en batch (tu método recibe List<ConsumerRecord<...>>)
spring.kafka.listener.ack-mode=BATCH
spring.kafka.listener.concurrency=1


spring.datasource.url=jdbc:oracle:thin:@dqxabcojf1x64nfc_tp?TNS_ADMIN=src/main/resources/Wallet_DQXABCOJF1X64NFC
spring.datasource.username=usuario_test
spring.datasource.password=Usuariotest2025
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.auto-commit=true
spring.jpa.open-in-view=false

# JPA/Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.hbm2ddl.halt_on_error=false

# SQL logs
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# SQL + binds
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# Kafka
logging.level.org.springframework.kafka=INFO
logging.level.com.example.bff_operaciones.consumer=INFO
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.org.apache.kafka.clients.admin=ERROR
logging.level.org.apache.kafka.common.network.Selector=ERROR

# Feign (si lo usas en este BFF)
logging.level.feign=DEBUG
feign.client.config.default.loggerLevel=FULL
logging.level.com.example.bff_inventario.client=DEBUG
logging.level.feign.Logger=DEBUG