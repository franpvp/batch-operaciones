spring.application.name=ms-batch-operaciones

# --- SPRING BATCH ---
spring.batch.job.name=csvToKafkaJob
spring.batch.jdbc.initialize-schema=always
spring.batch.job.enabled=false

# --- KAFKA PRODUCER ---
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Propiedades adicionales del productor
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.properties.batch.size=32768
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5


# --- APLICACIÓN ---
# Ruta del archivo CSV
app.csv.path=classpath:data/trades.csv

# Nombre del tópico donde se publicarán los TradeDto
app.kafka.topic=operaciones-trade-topic

# --- WATCHER (alineado con tu clase FileWatcher) ---
app.data.input=./inbox
app.data.processed=./processed
app.data.error=./error

# --- LOGGING ---
logging.level.com.example.ms_batch_operaciones=INFO
logging.level.org.springframework.batch=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.org.apache.kafka.clients.admin=ERROR
logging.level.org.apache.kafka.common.network.Selector=ERROR

# --- OPCIONAL ---
# Evita reinicios automáticos de Devtools al copiar CSV
spring.devtools.restart.exclude=**/data/**
spring.devtools.restart.enabled=false