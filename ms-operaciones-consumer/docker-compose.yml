services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 5s
      timeout: 5s
      retries: 20

  app:
    build: .
    container_name: ms-operaciones-consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      # Spring Kafka
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_GROUP_ID=ms-operaciones-consumer
      - KAFKA_TOPIC=operaciones
      - KAFKA_DLQ_TOPIC=operaciones.DLQ
      # Opcionales de tuning
      - KAFKA_CONCURRENCY=3
      - KAFKA_AUTO_OFFSET_RESET=latest
      - KAFKA_MAX_POLL_INTERVAL_MS=300000
      - KAFKA_SESSION_TIMEOUT_MS=15000
      - KAFKA_FETCH_MAX_BYTES=52428800
    restart: unless-stopped