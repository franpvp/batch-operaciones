spring.application.name=ms-operaciones-consumer

app.kafka.topic=operaciones-trade-topic
app.kafka.partitions=3
app.kafka.replication=1

# ===== Kafka =====
spring.kafka.bootstrap-servers=localhost:29092

# --- Consumer ---
spring.kafka.consumer.group-id=ms-operaciones-consumer-grp
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.ms_operaciones_consumer.dto.TradeDto

# Tuning de consumo
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.max.poll.records=100
spring.kafka.consumer.properties.fetch.max.wait.ms=500

# --- Producer (para publicar en la DLT) ---
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

spring.autoconfigure.exclude=\
org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration

logging.level.org.springframework.kafka=INFO
logging.level.com.example.ms_operaciones_consumer.kafka=INFO
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.org.apache.kafka.clients.admin=ERROR
logging.level.org.apache.kafka.common.network.Selector=ERROR